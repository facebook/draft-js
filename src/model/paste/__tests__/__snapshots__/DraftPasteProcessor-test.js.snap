// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should detect when somthing is un-styled in a child 1`] = `
Array [
  Immutable.Record {
    "key": "key39",
    "type": "unstyled",
    "text": "       hellothere ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`Should detect when somthing is un-styled in a child 2`] = `
Array [
  Immutable.Record {
    "key": "key40",
    "type": "unstyled",
    "text": "       hellothere ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`Should detect when somthing is un-styled in a child 3`] = `
Array [
  Immutable.Record {
    "key": "key41",
    "type": "unstyled",
    "text": "hellothere",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`Strip whitespace after block dividers 1`] = `
Array [
  Immutable.Record {
    "key": "key37",
    "type": "paragraph",
    "text": "hello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key38",
    "type": "paragraph",
    "text": "what",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`Tolerate doule BR tags separated by whitespace 1`] = `
Array [
  Immutable.Record {
    "key": "key35",
    "type": "unstyled",
    "text": "hi
 ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key36",
    "type": "unstyled",
    "text": "hello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must NOT split unstyled blocks inside a styled block 1`] = `
Array [
  Immutable.Record {
    "key": "key25",
    "type": "code-block",
    "text": "     hi

hello
    ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must NOT treat divs as Ps when we pave Ps 1`] = `
Array [
  Immutable.Record {
    "key": "key18",
    "type": "unstyled",
    "text": " ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key19",
    "type": "paragraph",
    "text": "hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key20",
    "type": "paragraph",
    "text": "hello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must collapse nested blocks to the topmost level 1`] = `
Array [
  Immutable.Record {
    "key": "key5",
    "type": "unstyled",
    "text": " ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key6",
    "type": "unordered-list-item",
    "text": "what
 ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must detect links in pasted content 1`] = `
Array [
  Immutable.Record {
    "key": "key30",
    "type": "unstyled",
    "text": "This is a link, yep.",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must detect two touching blocks 1`] = `
Array [
  Immutable.Record {
    "key": "key7",
    "type": "header-one",
    "text": "hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key8",
    "type": "header-two",
    "text": "hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must identify block styles 1`] = `
Array [
  Immutable.Record {
    "key": "key2",
    "type": "unstyled",
    "text": " ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key3",
    "type": "ordered-list-item",
    "text": "hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key4",
    "type": "ordered-list-item",
    "text": "there",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must identify italics text 1`] = `
Array [
  Immutable.Record {
    "key": "key0",
    "type": "unstyled",
    "text": "hello hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must identify overlapping inline styles 1`] = `
Array [
  Immutable.Record {
    "key": "key1",
    "type": "unstyled",
    "text": " he       hi     ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must ignore javascript: links 1`] = `
Array [
  Immutable.Record {
    "key": "key33",
    "type": "unstyled",
    "text": "This is a link, yep.",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must ignore links that do not actually link anywhere 1`] = `
Array [
  Immutable.Record {
    "key": "key32",
    "type": "unstyled",
    "text": "This is a link, yep.",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must insert a block when needed 1`] = `
Array [
  Immutable.Record {
    "key": "key9",
    "type": "header-one",
    "text": "hi ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key10",
    "type": "unstyled",
    "text": "whatever  ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key11",
    "type": "header-two",
    "text": "hi ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must not generate fake blocks on heavy nesting 1`] = `
Array [
  Immutable.Record {
    "key": "key12",
    "type": "paragraph",
    "text": " Word    ,  ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must parse based on style attribute 1`] = `
Array [
  Immutable.Record {
    "key": "key29",
    "type": "unstyled",
    "text": "       Bold Italic  .",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve list formatting 1`] = `
Array [
  Immutable.Record {
    "key": "key42",
    "type": "unstyled",
    "text": "what      ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key43",
    "type": "unordered-list-item",
    "text": "what",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key44",
    "type": "unordered-list-item",
    "text": "        what          ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key45",
    "type": "ordered-list-item",
    "text": "one",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 1,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key46",
    "type": "ordered-list-item",
    "text": "two",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 1,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key47",
    "type": "unordered-list-item",
    "text": "what",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve mailto: links 1`] = `
Array [
  Immutable.Record {
    "key": "key34",
    "type": "unstyled",
    "text": "This is a link, yep.",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "3",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "3",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "3",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "3",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve newlines in pre tags 1`] = `
Array [
  Immutable.Record {
    "key": "key27",
    "type": "code-block",
    "text": "     hello
there
    ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve newlines in whitespace in pre tags 1`] = `
Array [
  Immutable.Record {
    "key": "key28",
    "type": "code-block",
    "text": "     hello
there
    ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve spaces 1`] = `
Array [
  Immutable.Record {
    "key": "key13",
    "type": "unstyled",
    "text": "hello hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve spaces 2`] = `
Array [
  Immutable.Record {
    "key": "key14",
    "type": "unstyled",
    "text": "hello hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve spaces 3`] = `
Array [
  Immutable.Record {
    "key": "key15",
    "type": "unstyled",
    "text": "hello hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must preserve styles inside links in a good way 1`] = `
Array [
  Immutable.Record {
    "key": "key31",
    "type": "unstyled",
    "text": "A cool link, yep.",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": "2",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must replace br tags with soft newlines 1`] = `
Array [
  Immutable.Record {
    "key": "key21",
    "type": "unstyled",
    "text": "hi
hello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must replace newlines in regular tags 1`] = `
Array [
  Immutable.Record {
    "key": "key26",
    "type": "unstyled",
    "text": "      hello there     ",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must split unstyled blocks on two br tags 1`] = `
Array [
  Immutable.Record {
    "key": "key23",
    "type": "unstyled",
    "text": "hi
",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key24",
    "type": "unstyled",
    "text": "hello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must strip xml carriages and zero width spaces 1`] = `
Array [
  Immutable.Record {
    "key": "key22",
    "type": "unstyled",
    "text": "hihello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;

exports[`must treat divs as Ps when we do not have semantic markup 1`] = `
Array [
  Immutable.Record {
    "key": "key16",
    "type": "unstyled",
    "text": "hi",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  Immutable.Record {
    "key": "key17",
    "type": "unstyled",
    "text": "hello",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
]
`;
